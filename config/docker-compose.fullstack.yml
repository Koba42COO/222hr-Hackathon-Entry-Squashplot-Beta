version: '3.8'

services:
  # chAIos Backend API Server
  chaios-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: chaios-backend
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - ENV=production
      - DATABASE_URL=sqlite:///app/data/chaios.db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8100,http://frontend:80
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - redis
    networks:
      - chaios-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # chAIos Frontend (Angular/Ionic)
  chaios-frontend:
    build:
      context: ./chaios-frontend
      dockerfile: Dockerfile.prod
    container_name: chaios-frontend
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production
      - API_URL=http://chaios-backend:8000
      - WS_URL=ws://chaios-backend:8000/ws
    depends_on:
      - chaios-backend
    networks:
      - chaios-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: chaios-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chaios-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: chaios-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - chaios-backend
      - chaios-frontend
    networks:
      - chaios-network
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  chaios-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
