version: '3.8'

services:
  squashplot:
    build: .
    container_name: squashplot-beta
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-change-me-in-production}
      - API_KEY=${API_KEY:-change-me-in-production}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-}
      - CHIA_RPC_HOST=${CHIA_RPC_HOST:-localhost}
      - CHIA_RPC_PORT=${CHIA_RPC_PORT:-8555}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MAX_CONCURRENT_PLOTS=${MAX_CONCURRENT_PLOTS:-2}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./offers:/app/offers
      - /tmp/squashplot:/tmp/squashplot
      - /plots:/plots
    networks:
      - squashplot-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '1.0'
          memory: 2G

  # Optional: Database for job queue (future enhancement)
  # database:
  #   image: postgres:15-alpine
  #   container_name: squashplot-db
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: squashplot
  #     POSTGRES_USER: squashplot
  #     POSTGRES_PASSWORD: ${DB_PASSWORD:-change-me}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - squashplot-network

networks:
  squashplot-network:
    driver: bridge

volumes:
  postgres_data: