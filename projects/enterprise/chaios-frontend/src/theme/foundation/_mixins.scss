// chAIos Foundation Mixins
// ========================
// Reusable mixins for consistent styling patterns

// Typography Mixins
// =================
@mixin font-smoothing {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 3) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

@mixin golden-typography($scale: 1) {
  font-size: font-size($scale);
  line-height: line-height(font-size($scale));
  @include font-smoothing;
}

// Layout Mixins
// =============
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin grid-center($columns: 1) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  place-items: center;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin golden-aspect-ratio {
  aspect-ratio: 1.618 / 1; // Golden ratio
}

// Responsive Mixins
// =================
@mixin mobile-only {
  @media (max-width: #{$breakpoint-sm - 1px}) {
    @content;
  }
}

@mixin tablet-up {
  @media (min-width: #{$breakpoint-sm}) {
    @content;
  }
}

@mixin desktop-up {
  @media (min-width: #{$breakpoint-md}) {
    @content;
  }
}

@mixin large-desktop-up {
  @media (min-width: #{$breakpoint-lg}) {
    @content;
  }
}

@mixin custom-breakpoint($min-width: null, $max-width: null) {
  @if $min-width and $max-width {
    @media (min-width: #{$min-width}) and (max-width: #{$max-width}) {
      @content;
    }
  } @else if $min-width {
    @media (min-width: #{$min-width}) {
      @content;
    }
  } @else if $max-width {
    @media (max-width: #{$max-width}) {
      @content;
    }
  }
}

// Animation Mixins
// ================
@mixin transition($properties: all, $duration: $duration-normal, $easing: $ease-out) {
  transition: $properties $duration $easing;
}

@mixin consciousness-pulse($duration: 2s) {
  animation: consciousness-pulse $duration infinite;
}

@keyframes consciousness-pulse {
  0%, 100% { 
    opacity: 1; 
    transform: scale(1); 
  }
  50% { 
    opacity: 0.7; 
    transform: scale(1.05); 
  }
}

@mixin quantum-shimmer($duration: 3s) {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      rgba($color-tertiary-400, 0.3),
      transparent
    );
    animation: quantum-shimmer $duration infinite;
  }
}

@keyframes quantum-shimmer {
  0% { left: -100%; }
  100% { left: 100%; }
}

@mixin golden-spiral-animation($duration: 10s) {
  animation: golden-spiral $duration linear infinite;
}

@keyframes golden-spiral {
  0% { transform: rotate(0deg) scale(1); }
  25% { transform: rotate(90deg) scale(1.1); }
  50% { transform: rotate(180deg) scale(1.2); }
  75% { transform: rotate(270deg) scale(1.1); }
  100% { transform: rotate(360deg) scale(1); }
}

// Visual Effect Mixins
// ====================
@mixin glass-morphism($opacity: 0.1) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

@mixin neumorphism($depth: 10px, $blur: 20px, $color: $color-neutral-200) {
  box-shadow: 
    #{$depth} #{$depth} #{$blur} darken($color, 10%),
    #{-$depth} #{-$depth} #{$blur} lighten($color, 10%);
}

@mixin consciousness-glow($color: $color-primary-500, $intensity: 0.5) {
  box-shadow: 
    0 0 10px rgba($color, $intensity),
    0 0 20px rgba($color, $intensity * 0.7),
    0 0 30px rgba($color, $intensity * 0.4);
}

@mixin quantum-border($color: $color-tertiary-500) {
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 2px;
    background: linear-gradient(45deg, $color, quantum-shift($color, 60));
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: exclude;
  }
}

// Form Mixins
// ===========
@mixin input-base {
  width: 100%;
  padding: golden-spacing(2);
  border: 1px solid $color-neutral-300;
  border-radius: $border-radius-md;
  font-family: $font-family-primary;
  @include transition(border-color, box-shadow);
  
  &:focus {
    outline: none;
    border-color: $color-primary-500;
    @include consciousness-glow($color-primary-500, 0.3);
  }
  
  &::placeholder {
    color: $color-neutral-400;
  }
}

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: golden-spacing(1);
  padding: golden-spacing(2) golden-spacing(3);
  border: none;
  border-radius: $border-radius-md;
  font-family: $font-family-primary;
  font-weight: 600;
  cursor: pointer;
  @include transition(all);
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin button-variant($bg-color, $text-color: white, $hover-scale: 1.05) {
  @include button-base;
  background-color: $bg-color;
  color: $text-color;
  
  &:hover:not(:disabled) {
    background-color: darken($bg-color, 5%);
    transform: scale($hover-scale);
    @include consciousness-glow($bg-color, 0.4);
  }
  
  &:active {
    transform: scale(0.98);
  }
}

// Card Mixins
// ===========
@mixin card-base {
  background: white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-md;
  overflow: hidden;
  @include transition(transform, box-shadow);
}

@mixin card-hover {
  &:hover {
    transform: translateY(-4px);
    box-shadow: $shadow-xl;
  }
}

@mixin consciousness-card {
  @include card-base;
  @include card-hover;
  position: relative;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(
      90deg,
      $color-primary-500,
      $color-secondary-500,
      $color-tertiary-500
    );
  }
}

// Utility Mixins
// ==============
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin reset-list {
  list-style: none;
  padding: 0;
  margin: 0;
}

@mixin reset-button {
  background: none;
  border: none;
  padding: 0;
  margin: 0;
  font: inherit;
  cursor: pointer;
}

// Debug Mixins
// ============
@mixin debug-outline($color: red) {
  outline: 2px solid $color !important;
}

@mixin debug-grid {
  background-image: 
    linear-gradient(rgba(255, 0, 0, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 0, 0, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}
