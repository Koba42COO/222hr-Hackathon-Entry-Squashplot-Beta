.metrics-card {
  --background: var(--ion-color-light);
  --border-radius: 16px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  margin: 16px 0;
  overflow: hidden;
  position: relative;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, 
      var(--ion-color-primary), 
      var(--ion-color-secondary), 
      var(--ion-color-tertiary)
    );
    animation: shimmer 3s ease-in-out infinite;
  }
}

.metrics-title {
  display: flex;
  align-items: center;
  gap: 12px;
  font-size: 1.4rem;
  font-weight: 600;
  color: var(--ion-color-primary);

  ion-icon {
    font-size: 1.8rem;
    color: var(--ion-color-secondary);
  }
}

.metric-item {
  background: var(--ion-color-light-shade);
  border-radius: 12px;
  padding: 20px;
  margin: 8px 0;
  border: 1px solid var(--ion-color-light-tint);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;

  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 4px;
    height: 100%;
    background: var(--metric-accent-color, var(--ion-color-primary));
  }

  &.performance-gain {
    --metric-accent-color: var(--ion-color-success);
    
    &::after {
      content: '';
      position: absolute;
      top: -50%;
      right: -50%;
      width: 100%;
      height: 200%;
      background: radial-gradient(circle, rgba(40, 167, 69, 0.05) 0%, transparent 70%);
      pointer-events: none;
    }
  }

  &.correlation {
    --metric-accent-color: var(--ion-color-secondary);
    
    &::after {
      content: '';
      position: absolute;
      top: -50%;
      right: -50%;
      width: 100%;
      height: 200%;
      background: radial-gradient(circle, rgba(92, 107, 192, 0.05) 0%, transparent 70%);
      pointer-events: none;
    }
  }

  &.processing-time {
    --metric-accent-color: var(--ion-color-tertiary);
    
    &::after {
      content: '';
      position: absolute;
      top: -50%;
      right: -50%;
      width: 100%;
      height: 200%;
      background: radial-gradient(circle, rgba(255, 206, 84, 0.05) 0%, transparent 70%);
      pointer-events: none;
    }
  }

  &.iterations {
    --metric-accent-color: var(--ion-color-warning);
    
    &::after {
      content: '';
      position: absolute;
      top: -50%;
      right: -50%;
      width: 100%;
      height: 200%;
      background: radial-gradient(circle, rgba(255, 193, 7, 0.05) 0%, transparent 70%);
      pointer-events: none;
    }
  }
}

.metric-header {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 12px;

  ion-icon {
    font-size: 1.4rem;
    color: var(--metric-accent-color, var(--ion-color-primary));
  }

  .metric-label {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--ion-color-dark);
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }
}

.metric-value {
  font-size: 2.2rem;
  font-weight: 700;
  margin-bottom: 8px;
  font-family: 'Monaco', 'Menlo', monospace;
  
  &.excellent {
    color: var(--ion-color-success);
    text-shadow: 0 0 10px rgba(40, 167, 69, 0.3);
  }
  
  &.good {
    color: var(--ion-color-warning);
  }
  
  &.moderate {
    color: var(--ion-color-primary);
  }
  
  &.low {
    color: var(--ion-color-medium);
  }

  &.correlation-value {
    color: var(--ion-color-secondary);
  }

  &.time-value {
    color: var(--ion-color-tertiary);
  }

  &.iterations-value {
    color: var(--ion-color-warning);
  }
}

.metric-progress {
  margin: 8px 0;
  height: 6px;
  border-radius: 3px;
  
  &::part(track) {
    background: rgba(var(--ion-color-light-rgb), 0.3);
  }
}

.metric-subtitle {
  font-size: 0.8rem;
  color: var(--ion-color-medium);
  margin-top: 8px;
  line-height: 1.4;
}

// Constants Display
.constants-row {
  margin-top: 24px;
  padding-top: 24px;
  border-top: 1px solid var(--ion-color-light-tint);
}

.constants-display {
  background: linear-gradient(135deg, 
    rgba(var(--ion-color-primary-rgb), 0.05) 0%, 
    rgba(var(--ion-color-secondary-rgb), 0.05) 100%
  );
  border-radius: 12px;
  padding: 20px;
  position: relative;
  overflow: hidden;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23000000' fill-opacity='0.02'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
    opacity: 0.1;
    pointer-events: none;
  }
}

.constants-header {
  display: flex;
  align-items: center;
  gap: 12px;
  margin-bottom: 20px;
  
  ion-icon {
    font-size: 1.6rem;
    color: var(--ion-color-primary);
  }
  
  span {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--ion-color-dark);
  }
}

.constants-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 16px;
}

.constant-card {
  background: rgba(255, 255, 255, 0.8);
  backdrop-filter: blur(10px);
  border-radius: 12px;
  padding: 16px;
  text-align: center;
  border: 1px solid rgba(var(--ion-color-primary-rgb), 0.1);
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;

  &:hover {
    transform: translateY(-2px) scale(1.02);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
  }

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(90deg, transparent, var(--constant-color), transparent);
  }

  &.phi {
    --constant-color: var(--ion-color-primary);
    
    .constant-symbol {
      color: var(--ion-color-primary);
    }
  }

  &.sigma {
    --constant-color: var(--ion-color-secondary);
    
    .constant-symbol {
      color: var(--ion-color-secondary);
    }
  }

  &.ratio {
    --constant-color: var(--ion-color-tertiary);
    
    .constant-symbol {
      color: var(--ion-color-tertiary);
    }
  }

  &.efficiency {
    --constant-color: var(--ion-color-success);
    
    .constant-symbol {
      color: var(--ion-color-success);
    }
  }
}

.constant-symbol {
  font-size: 2rem;
  font-weight: 700;
  margin-bottom: 8px;
  font-family: 'Times New Roman', serif;
}

.constant-value {
  font-size: 1.1rem;
  font-weight: 600;
  margin-bottom: 4px;
  font-family: 'Monaco', 'Menlo', monospace;
  color: var(--ion-color-dark);
}

.constant-name {
  font-size: 0.8rem;
  color: var(--ion-color-medium);
  font-weight: 500;
}

// Status Row
.status-row {
  margin-top: 20px;
  padding-top: 16px;
  border-top: 1px solid var(--ion-color-light-tint);
  align-items: center;
}

.status-display {
  display: flex;
  align-items: center;
  gap: 12px;
}

.status-badge {
  font-size: 0.8rem;
  font-weight: 600;
  padding: 6px 12px;
  border-radius: 20px;
}

.status-description {
  font-size: 0.9rem;
  color: var(--ion-color-medium-shade);
}

.timestamp-display {
  text-align: right;
  
  @media (max-width: 768px) {
    text-align: left;
    margin-top: 8px;
  }
}

// Processing Indicator
.processing-indicator {
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(0, 0, 0, 0.9);
  backdrop-filter: blur(20px);
  border-radius: 20px;
  padding: 40px;
  z-index: 10000;
  text-align: center;
  color: white;
  box-shadow: 0 20px 60px rgba(0, 0, 0, 0.5);
  min-width: 300px;
}

.processing-animation {
  position: relative;
  width: 100px;
  height: 100px;
  margin: 0 auto 20px;
}

.consciousness-wave {
  position: absolute;
  width: 100%;
  height: 100%;
  border: 3px solid var(--ion-color-primary);
  border-radius: 50%;
  animation: consciousnessWave 2s ease-in-out infinite;
  
  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    border: 3px solid var(--ion-color-secondary);
    border-radius: 50%;
    top: -3px;
    left: -3px;
  }
  
  &::before {
    animation: consciousnessWave 2s ease-in-out infinite 0.5s;
  }
  
  &::after {
    animation: consciousnessWave 2s ease-in-out infinite 1s;
  }
}

.golden-particles {
  position: absolute;
  width: 100%;
  height: 100%;
  
  &::before,
  &::after {
    content: '';
    position: absolute;
    width: 6px;
    height: 6px;
    background: var(--ion-color-warning);
    border-radius: 50%;
    animation: goldenParticles 3s linear infinite;
  }
  
  &::before {
    top: 10px;
    left: 50%;
    transform: translateX(-50%);
  }
  
  &::after {
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    animation-delay: 1.5s;
  }
}

.processing-text {
  h3 {
    margin: 0 0 8px;
    font-size: 1.4rem;
    font-weight: 600;
    color: var(--ion-color-primary);
  }
  
  p {
    margin: 0;
    font-size: 0.9rem;
    color: rgba(255, 255, 255, 0.8);
    line-height: 1.4;
  }
}

// Animations
@keyframes shimmer {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

@keyframes consciousnessWave {
  0%, 100% {
    transform: scale(1);
    opacity: 1;
  }
  50% {
    transform: scale(1.1);
    opacity: 0.7;
  }
}

@keyframes goldenParticles {
  0% {
    transform: translateX(-50%) rotate(0deg) translateX(30px) rotate(0deg);
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
  100% {
    transform: translateX(-50%) rotate(360deg) translateX(30px) rotate(-360deg);
    opacity: 1;
  }
}

// Responsive Design
@media (max-width: 768px) {
  .metrics-card {
    margin: 8px 0;
  }
  
  .metric-item {
    padding: 16px;
    margin: 6px 0;
  }
  
  .metric-value {
    font-size: 1.8rem;
  }
  
  .constants-grid {
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 12px;
  }
  
  .constant-card {
    padding: 12px;
  }
  
  .constant-symbol {
    font-size: 1.6rem;
  }
  
  .processing-indicator {
    padding: 30px;
    min-width: 250px;
  }
  
  .processing-animation {
    width: 80px;
    height: 80px;
  }
}

@media (max-width: 480px) {
  .metrics-title {
    font-size: 1.2rem;
  }
  
  .metric-value {
    font-size: 1.6rem;
  }
  
  .constants-grid {
    grid-template-columns: 1fr 1fr;
  }
}