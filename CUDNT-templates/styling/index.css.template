@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  --button-outline: rgba(0,0,0, {{buttonOutlineAlpha}});
  --badge-outline: rgba(0,0,0, {{badgeOutlineAlpha}});

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: {{buttonBorderIntensity}}; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, {{elevate1Alpha}});
  --elevate-2: rgba(0,0,0, {{elevate2Alpha}});

  --background: {{lightBackgroundHue}} {{lightBackgroundSat}}% {{lightBackgroundLight}}%;

  --foreground: {{lightForegroundHue}} {{lightForegroundSat}}% {{lightForegroundLight}}%;

  --border: {{lightBorderHue}} {{lightBorderSat}}% {{lightBorderLight}}%;

  --card: {{lightCardHue}} {{lightCardSat}}% {{lightCardLight}}%;

  --card-foreground: {{lightCardForegroundHue}} {{lightCardForegroundSat}}% {{lightCardForegroundLight}}%;

  --card-border: {{lightCardBorderHue}} {{lightCardBorderSat}}% {{lightCardBorderLight}}%;

  --sidebar: {{lightSidebarHue}} {{lightSidebarSat}}% {{lightSidebarLight}}%;

  --sidebar-foreground: {{lightSidebarForegroundHue}} {{lightSidebarForegroundSat}}% {{lightSidebarForegroundLight}}%;

  --sidebar-border: {{lightSidebarBorderHue}} {{lightSidebarBorderSat}}% {{lightSidebarBorderLight}}%;

  --sidebar-primary: {{sidebarPrimaryHue}} {{sidebarPrimarySat}}% {{sidebarPrimaryLight}}%;

  --sidebar-primary-foreground: {{sidebarPrimaryForegroundHue}} {{sidebarPrimaryForegroundSat}}% {{sidebarPrimaryForegroundLight}}%;

  --sidebar-accent: {{lightSidebarAccentHue}} {{lightSidebarAccentSat}}% {{lightSidebarAccentLight}}%;

  --sidebar-accent-foreground: {{lightSidebarAccentForegroundHue}} {{lightSidebarAccentForegroundSat}}% {{lightSidebarAccentForegroundLight}}%;

  --sidebar-ring: {{sidebarRingHue}} {{sidebarRingSat}}% {{sidebarRingLight}}%;

  --popover: {{lightPopoverHue}} {{lightPopoverSat}}% {{lightPopoverLight}}%;

  --popover-foreground: {{lightPopoverForegroundHue}} {{lightPopoverForegroundSat}}% {{lightPopoverForegroundLight}}%;

  --popover-border: {{lightPopoverBorderHue}} {{lightPopoverBorderSat}}% {{lightPopoverBorderLight}}%;

  --primary: {{primaryHue}} {{primarySat}}% {{primaryLight}}%;

  --primary-foreground: {{primaryForegroundHue}} {{primaryForegroundSat}}% {{primaryForegroundLight}}%;

  --secondary: {{lightSecondaryHue}} {{lightSecondarySat}}% {{lightSecondaryLight}}%;

  --secondary-foreground: {{lightSecondaryForegroundHue}} {{lightSecondaryForegroundSat}}% {{lightSecondaryForegroundLight}}%;

  --muted: {{lightMutedHue}} {{lightMutedSat}}% {{lightMutedLight}}%;

  --muted-foreground: {{lightMutedForegroundHue}} {{lightMutedForegroundSat}}% {{lightMutedForegroundLight}}%;

  --accent: {{lightAccentHue}} {{lightAccentSat}}% {{lightAccentLight}}%;

  --accent-foreground: {{lightAccentForegroundHue}} {{lightAccentForegroundSat}}% {{lightAccentForegroundLight}}%;

  --destructive: {{destructiveHue}} {{destructiveSat}}% {{destructiveLight}}%;

  --destructive-foreground: {{destructiveForegroundHue}} {{destructiveForegroundSat}}% {{destructiveForegroundLight}}%;

  --input: {{lightInputHue}} {{lightInputSat}}% {{lightInputLight}}%;
  --ring: {{ringHue}} {{ringSat}}% {{ringLight}}%;
  --chart-1: {{chart1Hue}} {{chart1Sat}}% {{chart1Light}}%;
  --chart-2: {{chart2Hue}} {{chart2Sat}}% {{chart2Light}}%;
  --chart-3: {{chart3Hue}} {{chart3Sat}}% {{chart3Light}}%;
  --chart-4: {{chart4Hue}} {{chart4Sat}}% {{chart4Light}}%;
  --chart-5: {{chart5Hue}} {{chart5Sat}}% {{chart5Light}}%;

  --font-sans: {{fontSans}};
  --font-serif: {{fontSerif}};
  --font-mono: {{fontMono}};
  --radius: {{borderRadius}}rem; /* {{borderRadiusPx}}px */
  --shadow-2xs: {{lightShadow2xs}};
  --shadow-xs: {{lightShadowXs}};
  --shadow-sm: {{lightShadowSm}};
  --shadow: {{lightShadow}};
  --shadow-md: {{lightShadowMd}};
  --shadow-lg: {{lightShadowLg}};
  --shadow-xl: {{lightShadowXl}};
  --shadow-2xl: {{lightShadow2xl}};
  --tracking-normal: {{trackingNormal}};
  --spacing: {{spacing}};

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
}

.dark {
  --button-outline: rgba(255,255,255, {{darkButtonOutlineAlpha}});
  --badge-outline: rgba(255,255,255, {{darkBadgeOutlineAlpha}});

  --opaque-button-border-intensity: {{darkButtonBorderIntensity}};  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, {{darkElevate1Alpha}});
  --elevate-2: rgba(255,255,255, {{darkElevate2Alpha}});

  --background: {{darkBackgroundHue}} {{darkBackgroundSat}}% {{darkBackgroundLight}}%;

  --foreground: {{darkForegroundHue}} {{darkForegroundSat}}% {{darkForegroundLight}}%;

  --border: {{darkBorderHue}} {{darkBorderSat}}% {{darkBorderLight}}%;

  --card: {{darkCardHue}} {{darkCardSat}}% {{darkCardLight}}%;

  --card-foreground: {{darkCardForegroundHue}} {{darkCardForegroundSat}}% {{darkCardForegroundLight}}%;

  --card-border: {{darkCardBorderHue}} {{darkCardBorderSat}}% {{darkCardBorderLight}}%;

  --sidebar: {{darkSidebarHue}} {{darkSidebarSat}}% {{darkSidebarLight}}%;

  --sidebar-foreground: {{darkSidebarForegroundHue}} {{darkSidebarForegroundSat}}% {{darkSidebarForegroundLight}}%;

  --sidebar-border: {{darkSidebarBorderHue}} {{darkSidebarBorderSat}}% {{darkSidebarBorderLight}}%;

  --sidebar-primary: {{sidebarPrimaryHue}} {{sidebarPrimarySat}}% {{sidebarPrimaryLight}}%;

  --sidebar-primary-foreground: {{sidebarPrimaryForegroundHue}} {{sidebarPrimaryForegroundSat}}% {{sidebarPrimaryForegroundLight}}%;

  --sidebar-accent: {{darkSidebarAccentHue}} {{darkSidebarAccentSat}}% {{darkSidebarAccentLight}}%;

  --sidebar-accent-foreground: {{darkSidebarAccentForegroundHue}} {{darkSidebarAccentForegroundSat}}% {{darkSidebarAccentForegroundLight}}%;

  --sidebar-ring: {{sidebarRingHue}} {{sidebarRingSat}}% {{sidebarRingLight}}%;

  --popover: {{darkPopoverHue}} {{darkPopoverSat}}% {{darkPopoverLight}}%;

  --popover-foreground: {{darkPopoverForegroundHue}} {{darkPopoverForegroundSat}}% {{darkPopoverForegroundLight}}%;

  --popover-border: {{darkPopoverBorderHue}} {{darkPopoverBorderSat}}% {{darkPopoverBorderLight}}%;

  --primary: {{darkPrimaryHue}} {{darkPrimarySat}}% {{darkPrimaryLight}}%;

  --primary-foreground: {{darkPrimaryForegroundHue}} {{darkPrimaryForegroundSat}}% {{darkPrimaryForegroundLight}}%;

  --secondary: {{darkSecondaryHue}} {{darkSecondarySat}}% {{darkSecondaryLight}}%;

  --secondary-foreground: {{darkSecondaryForegroundHue}} {{darkSecondaryForegroundSat}}% {{darkSecondaryForegroundLight}}%;

  --muted: {{darkMutedHue}} {{darkMutedSat}}% {{darkMutedLight}}%;

  --muted-foreground: {{darkMutedForegroundHue}} {{darkMutedForegroundSat}}% {{darkMutedForegroundLight}}%;

  --accent: {{darkAccentHue}} {{darkAccentSat}}% {{darkAccentLight}}%;

  --accent-foreground: {{darkAccentForegroundHue}} {{darkAccentForegroundSat}}% {{darkAccentForegroundLight}}%;

  --destructive: {{darkDestructiveHue}} {{darkDestructiveSat}}% {{darkDestructiveLight}}%;

  --destructive-foreground: {{darkDestructiveForegroundHue}} {{darkDestructiveForegroundSat}}% {{darkDestructiveForegroundLight}}%;

  --input: {{darkInputHue}} {{darkInputSat}}% {{darkInputLight}}%;
  --ring: {{ringHue}} {{ringSat}}% {{ringLight}}%;
  --chart-1: {{darkChart1Hue}} {{darkChart1Sat}}% {{darkChart1Light}}%;
  --chart-2: {{darkChart2Hue}} {{darkChart2Sat}}% {{darkChart2Light}}%;
  --chart-3: {{darkChart3Hue}} {{darkChart3Sat}}% {{darkChart3Light}}%;
  --chart-4: {{darkChart4Hue}} {{darkChart4Sat}}% {{darkChart4Light}}%;
  --chart-5: {{darkChart5Hue}} {{darkChart5Sat}}% {{darkChart5Light}}%;

  --shadow-2xs: {{darkShadow2xs}};
  --shadow-xs: {{darkShadowXs}};
  --shadow-sm: {{darkShadowSm}};
  --shadow: {{darkShadow}};
  --shadow-md: {{darkShadowMd}};
  --shadow-lg: {{darkShadowLg}};
  --shadow-xl: {{darkShadowXl}};
  --shadow-2xl: {{darkShadow2xl}};
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
     * buttons/badges can remove the automatic brightness adjustment on interactions
     * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
     * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
     * This way they can stack/compound. Both will overlap the parent's borders!
     * So borders will be automatically adjusted both on toggle, and hover/active,
     * and they will be compounded.
     */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}
